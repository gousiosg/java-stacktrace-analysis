\begin{thebibliography}{58}
\providecommand{\natexlab}[1]{#1}
\providecommand{\url}[1]{{#1}}
\providecommand{\urlprefix}{URL }
\expandafter\ifx\csname urlstyle\endcsname\relax
  \providecommand{\doi}[1]{DOI~\discretionary{}{}{}#1}\else
  \providecommand{\doi}{DOI~\discretionary{}{}{}\begingroup
  \urlstyle{rm}\Url}\fi
\providecommand{\eprint}[2][]{\url{#2}}

\bibitem[{deb(2013)}]{debate}
 (2013) Checked or unchecked exceptions?
  \url{http://tutorials.jenkov.com/java-exception-handling/checked-or-unchecked-exceptions.html},
  online

\bibitem[{Acr(2014)}]{Acra14}
 (2014) Acra. \url{code.google.com/p/acra/}, online

\bibitem[{Bug(2014{\natexlab{a}})}]{BugSe14}
 (2014{\natexlab{a}}) Bugsense. \url{https://www.bugsense.com/}, online

\bibitem[{Bug(2014{\natexlab{b}})}]{BugSn14}
 (2014{\natexlab{b}}) Bugsnag. \url{https://bugsnag.com/}, online

\bibitem[{Goo(2014)}]{Googl14}
 (2014) Google analytics. \url{https://www.google.com/analytics/}, online

\bibitem[{sta(2014)}]{stackoverlow}
 (2014) Java: checked vs unchecked exception explanation.
  \url{http://stackoverflow.com/questions/6115896/java-checked-vs-unchecked-exception-explanation},
  online

\bibitem[{jav(2014{\natexlab{a}})}]{javaback}
 (2014{\natexlab{a}}) Java specification on backward compatibility.
  \url{http://docs.oracle.com/javase/specs/jls/se7/html/jls-13.html}, online

\bibitem[{jav(2014{\natexlab{b}})}]{javatut}
 (2014{\natexlab{b}}) The {J}ava tutorial. {U}nchecked exceptions: The
  controversy. \url{http://docs.oracle.com/javase/ tutorial/essential
  /exceptions/runtime.html}, online

\bibitem[{hoa(2014)}]{hoare2}
 (2014) Null references: The billion dollar mistake, abstract of talk at qcon
  londo.
  \url{qconlondon.com/london-2009/presentation/Null+References:+The+Billion+Dollar+Mistake},
  online

\bibitem[{Amalfitano et~al(2012)Amalfitano, Fasolino, Tramontana, De~Carmine,
  and Memon}]{ama2012}
Amalfitano D, Fasolino AR, Tramontana P, De~Carmine S, Memon AM (2012) Using
  gui ripping for automated testing of android applications. In: Proceedings of
  the 27th IEEE/ACM International Conference on Automated Software Engineering,
  ACM, pp 258--261

\bibitem[{Bacchelli et~al(2012)Bacchelli, Dal~Sasso, D'Ambros, and
  Lanza}]{bacchelli2012content}
Bacchelli A, Dal~Sasso T, D'Ambros M, Lanza M (2012) Content classification of
  development emails. In: Proceedings of ICSE 2012, pp 375--385

\bibitem[{Bettenburg et~al(2008{\natexlab{a}})Bettenburg, Just, Schr{\"o}ter,
  Weiss, Premraj, and Zimmermann}]{bettenburg2008makes}
Bettenburg N, Just S, Schr{\"o}ter A, Weiss C, Premraj R, Zimmermann T
  (2008{\natexlab{a}}) What makes a good bug report? In: Proceedings of FSE
  2008, pp 308--318

\bibitem[{Bettenburg et~al(2008{\natexlab{b}})Bettenburg, Premraj, Zimmermann,
  and Kim}]{bettenburg2008extracting}
Bettenburg N, Premraj R, Zimmermann T, Kim S (2008{\natexlab{b}}) Extracting
  structural information from bug reports. In: Proceedings of MSR 2008, ACM, pp
  27--30

\bibitem[{Binder(2000)}]{binder2000testing}
Binder R (2000) Testing object-oriented systems: models, patterns, and tools.
  Addison-Wesley Professional

\bibitem[{Bloch(2008)}]{bloch2008effective}
Bloch J (2008) Effective java. Pearson Education India

\bibitem[{Brunet et~al(2009)Brunet, Guerrero, and Figueiredo}]{Brunet09}
Brunet J, Guerrero D, Figueiredo J (2009) Design tests: An approach to
  programmatically check your code against design rules. In: Proceedings of New
  Ideas and Emerging Research (NIER) track at the International Conference on
  Software Engineering (ICSE), IEEE, pp 255--258

\bibitem[{Cabral and Marques(2007)}]{cabral2007exception}
Cabral B, Marques P (2007) Exception handling: A field study in {J}ava and
  {.N}et. In: Proceedings of ECOOP 2007, Springer, pp 151--175

\bibitem[{Charmaz(2006)}]{charmaz2006}
Charmaz K (2006) Constructing grounded theory: A practical guide through
  qualitative research. SagePublications Ltd, London

\bibitem[{Coelho et~al(2008)Coelho, Rashid, Garcia, Ferrari, Cacho, Kulesza,
  von Staa, and Lucena}]{coelho2008assessing}
Coelho R, Rashid A, Garcia A, Ferrari F, Cacho N, Kulesza U, von Staa A, Lucena
  C (2008) Assessing the impact of aspects on exception flows: An exploratory
  study. In: Proceedings of European Conference on Object-Oriented Programming
  (ECOOP), Springer-Verlag, pp 207--234

\bibitem[{Coelho et~al(2011)Coelho, von Staa, Kulesza, Rashid, and
  Lucena}]{coelho2011unveiling}
Coelho R, von Staa A, Kulesza U, Rashid A, Lucena C (2011) Unveiling and taming
  liabilities of aspects in the presence of exceptions: a static analysis based
  approach. Information Sciences 181(13):2700--2720

\bibitem[{Coelho et~al(2015)Coelho, Almeida, Gousios, and van
  Deursen}]{coelhoetal15}
Coelho R, Almeida L, Gousios G, van Deursen A (2015) Unveiling exception
  handling bug hazards in android based on github and google code issues. In:
  Proceedings Working Conference on Mining Software Repositories (MSR), pp
  2--10

\bibitem[{Csallner and Smaragdakis(2004)}]{csallner2004jcrasher}
Csallner C, Smaragdakis Y (2004) Jcrasher: an automatic robustness tester for
  {J}ava. Software: Practice and Experience 34(11):1025--1050

\bibitem[{Dhaliwal et~al(2011)Dhaliwal, Khomh, and
  Zou}]{dhaliwal2011classifying}
Dhaliwal T, Khomh F, Zou Y (2011) Classifying field crash reports for fixing
  bugs: A case study of mozilla firefox. In: Proceedings of International
  Conference on Software Maintenance (ICSM 2011), pp 333--342

\bibitem[{Enck et~al(2011)Enck, Octeau, McDaniel, and
  Chaudhuri}]{enck2011study}
Enck W, Octeau D, McDaniel P, Chaudhuri S (2011) A study of android application
  security. In: USENIX security symposium, vol~2, p~2

\bibitem[{Fraser and Arcuri(2013)}]{fraser20131600}
Fraser G, Arcuri A (2013) 1600 faults in 100 projects: automatically finding
  faults while achieving high coverage with evosuite. Empirical Software
  Engineering pp 1--29

\bibitem[{Garcia et~al(2007)Garcia, Rubira et~al}]{garcia2007extracting}
Garcia A, Rubira C, et~al (2007) Extracting error handling to aspects: A
  cookbook. In: Proceedings International Conference on Software Maintenance
  (ICSM), IEEE, pp 134--143

\bibitem[{Garcia et~al(2001)Garcia, Rubira, Romanovsky, and
  Xu}]{garcia2001comparative}
Garcia AF, Rubira CM, Romanovsky A, Xu J (2001) A comparative study of
  exception handling mechanisms for building dependable object-oriented
  software. Journal of systems and software 59(2):197--222

\bibitem[{Goodenough(1975)}]{goodenough1975exception}
Goodenough JB (1975) Exception handling: issues and a proposed notation. CACM
  18(12):683--696

\bibitem[{Gosling(2000)}]{gosling2000java}
Gosling J (2000) The {J}ava language specification. Addison-Wesley Professional

\bibitem[{Gousios(2013)}]{Gousi13}
Gousios G (2013) The {GHT}orrent dataset and tool suite. In: Proceedings of the
  International Working Conference on Mining Software Repositories (MSR), IEEE,
  pp 233--236

\bibitem[{Gousios et~al(2015)Gousios, Zaidman, Storey, and
  Van~Deursen}]{gousios2015}
Gousios G, Zaidman A, Storey MA, Van~Deursen A (2015) Work practices and
  challenges in pull-based development: the integrator's perspective. Tech.
  rep.

\bibitem[{Jo et~al(2004)Jo, Chang, Yi, and Choe}]{jo2004uncaught}
Jo JW, Chang BM, Yi K, Choe KM (2004) An uncaught exception analysis for java.
  Journal of systems and software 72(1):59--69

\bibitem[{Kechagia and Spinellis(2014)}]{kechagia2014}
Kechagia M, Spinellis D (2014) Undocumented and unchecked: exceptions that
  spell trouble. In: Proceedings of the 11th Working Conference on Mining
  Software Repositories, ACM, pp 312--315

\bibitem[{Kim et~al(2011)Kim, Zimmermann, and Nagappan}]{kim2011crash}
Kim S, Zimmermann T, Nagappan N (2011) Crash graphs: An aggregated view of
  multiple crashes to improve crash triage. In: Proceedings of the IEEE/IFIP
  International Conference on Dependable Systems and Networks (DSN), IEEE, pp
  486--493

\bibitem[{Kim et~al(2013)Kim, Zimmermann, Premraj, Bettenburg, and
  Shivaji}]{kim2013predicting}
Kim S, Zimmermann T, Premraj R, Bettenburg N, Shivaji S (2013) Predicting
  method crashes with bytecode operations. In: Proceedings of the 6th India
  Software Engineering Conference, pp 3--12

\bibitem[{Linares-V\'{a}squez et~al(2013)Linares-V\'{a}squez, Bavota,
  Bernal-C\'{a}rdenas, Di~Penta, Oliveto, and Poshyvanyk}]{Linar13}
Linares-V\'{a}squez M, Bavota G, Bernal-C\'{a}rdenas C, Di~Penta M, Oliveto R,
  Poshyvanyk D (2013) {API} change and fault proneness: A threat to the success
  of {Android} apps. In: Proceedings of FSE 2013, ACM, pp 477--487,
  \doi{10.1145/2491411.2491428},
  \urlprefix\url{http://doi.acm.org/10.1145/2491411.2491428}

\bibitem[{Maji et~al(2012)Maji, Arshad, Bagchi, and
  Rellermeyer}]{maji2012empirical}
Maji AK, Arshad FA, Bagchi S, Rellermeyer JS (2012) An empirical study of the
  robustness of inter-component communication in {A}ndroid. In: Proceedings of
  the IEEE/IFIP International Conference on Dependable Systems and Networks
  (DSN), IEEE, pp 1--12

\bibitem[{Mandrioli and Meyer(1992)}]{mandrioli1992advances}
Mandrioli D, Meyer B (1992) Advances in object-oriented software engineering.
  Prentice-Hall, Inc.

\bibitem[{McDonnell et~al(2013)McDonnell, Ray, and Kim}]{McDon13}
McDonnell T, Ray B, Kim M (2013) An empirical study of api stability and
  adoption in the android ecosystem. In: Proceedings International Conference
  on Software Maintenance (ICSM), pp 70--79

\bibitem[{Meyer et~al(2014)Meyer, Fritz, Murphy, and Zimmermann}]{meyer2014}
Meyer AN, Fritz T, Murphy GC, Zimmermann T (2014) Software developers'
  perceptions of productivity. In: Proceedings of the 22nd ACM SIGSOFT
  International Symposium on Foundations of Software Engineering, ACM, pp
  19--29

\bibitem[{Miller and Tripathi(1997)}]{miller1997issues}
Miller R, Tripathi A (1997) Issues with exception handling in object-oriented
  systems. In: Proceedings of ECOOP'97, Springer, pp 85--103

\bibitem[{Nanda and Sinha(2009)}]{nanda2009accurate}
Nanda MG, Sinha S (2009) Accurate interprocedural null-dereference analysis for
  java. In: Software Engineering, 2009. ICSE 2009. IEEE 31st International
  Conference on, IEEE, pp 133--143

\bibitem[{Pathak et~al(2011)Pathak, Hu, and Zhang}]{Patha11}
Pathak A, Hu YC, Zhang M (2011) Bootstrapping energy debugging on smartphones:
  A first look at energy bugs in mobile devices. In: Proceedings of the 10th
  ACM Workshop on Hot Topics in Networks, ACM, New York, NY, USA, HotNets-X, pp
  5:1--5:6, \doi{10.1145/2070562.2070567},
  \urlprefix\url{http://doi.acm.org/10.1145/2070562.2070567}

\bibitem[{Pham et~al(2013)Pham, Singer, Liskin, Figueira~Filho, and
  Schneider}]{pham2013}
Pham R, Singer L, Liskin O, Figueira~Filho F, Schneider K (2013) Creating a
  shared understanding of testing culture on a social coding site. In: Software
  Engineering (ICSE), 2013 35th International Conference on, IEEE, pp 112--121

\bibitem[{Robillard and Murphy(2000)}]{Robil00}
Robillard MP, Murphy GC (2000) Designing robust {J}ava programs with
  exceptions. In: Proceedings International Conference on the Foundations of
  Software Engineering (FSE), pp 2--10

\bibitem[{Ruiz et~al(2012)Ruiz, Nagappan, Adams, and Hassan}]{Ruiz12}
Ruiz I, Nagappan M, Adams B, Hassan A (2012) Understanding reuse in the
  {Android} market. In: Proceedings of the International Conference on Program
  Comprehension (ICPC), pp 113--122, \doi{10.1109/ICPC.2012.6240477}

\bibitem[{Sacramento et~al(2006)Sacramento, Cabral, and
  Marques}]{sacramento2006unchecked}
Sacramento P, Cabral B, Marques P (2006) Unchecked exceptions: can the
  programmer be trusted to document exceptions. In: International Conference on
  Innovative Views of .NET Technologies

\bibitem[{Schr{\"{o}}ter et~al(2010)Schr{\"{o}}ter, Bettenburg, and
  Premraj}]{schroter2010stack}
Schr{\"{o}}ter A, Bettenburg N, Premraj R (2010) Do stack traces help
  developers fix bugs? In: Proceedings Working Conference on Mining Software
  Repositories (MSR), IEEE, pp 118--121

\bibitem[{Shah et~al(2010)Shah, Gorg, and Harrold}]{shah2010understanding}
Shah HB, Gorg C, Harrold MJ (2010) Understanding exception handling: Viewpoints
  of novices and experts. IEEE Trans Soft Eng 36(2):150--161

\bibitem[{Singer et~al(2014)Singer, Figueira~Filho, and Storey}]{singer2014}
Singer L, Figueira~Filho F, Storey MA (2014) Software engineering at the speed
  of light: how developers stay current using twitter. In: Proceedings of the
  36th International Conference on Software Engineering, ACM, pp 211--221

\bibitem[{Sinha et~al(2009)Sinha, Shah, G{\"o}rg, Jiang, Kim, and
  Harrold}]{sinha2009fault}
Sinha S, Shah H, G{\"o}rg C, Jiang S, Kim M, Harrold MJ (2009) Fault
  localization and repair for {J}ava runtime exceptions. In: Proceedings
  International Symposium on Software Testing and Analysis (ISSTA), ACM, pp
  153--164

\bibitem[{Van~Dooren and Steegmans(2005)}]{van2005combining}
Van~Dooren M, Steegmans E (2005) Combining the robustness of checked exceptions
  with the flexibility of unchecked exceptions using anchored exception
  declarations. ACM SIGPLAN Notices 40(10):455--471

\bibitem[{Wadler(1995)}]{Walde95}
Wadler P (1995) Monads for functional programming. In: Advanced Functional
  Programming, Springer, pp 24--52

\bibitem[{Wang et~al(2013)Wang, Khomh, and Zou}]{wang2013improving}
Wang S, Khomh F, Zou Y (2013) Improving bug localization using correlations in
  crash reports. In: Proceedings Working Conference on Mining Software
  Repositories (MSR 2013), ACM/IEEE, pp 247--256

\bibitem[{Wasserman(2010)}]{was2010}
Wasserman AI (2010) Software engineering issues for mobile application
  development. In: Proceedings of the FSE/SDP workshop on Future of software
  engineering research, ACM, pp 397--400

\bibitem[{Wirfs-Brock(2006)}]{wirfs2006toward}
Wirfs-Brock RJ (2006) Toward exception-handling best practices and patterns.
  Software, IEEE 23(5):11--13

\bibitem[{Yuan et~al(2014)Yuan, Luo, Zhuang, Rodrigues, Zhao, Zhang, Jain, and
  Stumm}]{yuan:2014.osdi}
Yuan D, Luo Y, Zhuang X, Rodrigues GR, Zhao X, Zhang Y, Jain P, Stumm M (2014)
  Simple testing can prevent most critical failures: An analysis of production
  failures in distributed data-intensive systems. In: 11th {USENIX} Symposium
  on Operating Systems Design and Implementation, {OSDI} '14, Broomfield, CO,
  USA, October 6-8, 2014., pp 249--265

\bibitem[{Zhang and Elbaum(2012)}]{Zhang12}
Zhang P, Elbaum S (2012) Amplifying tests to validate exception handling code.
  In: Proceedings International Conference on Software Engineering (ICSE), IEEE
  Press, Piscataway, NJ, USA, pp 595--605,
  \urlprefix\url{http://dl.acm.org/citation.cfm?id=2337223.2337293}

\end{thebibliography}
